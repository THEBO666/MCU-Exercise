C51 COMPILER V8.06   YSF                                                                   02/15/2012 21:32:19 PAGE 1   


C51 COMPILER V8.06, COMPILATION OF MODULE YSF
OBJECT MODULE PLACED IN ysf.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ysf.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************HJ-3G实验开发板例程************************
   2          *  平台：HJ-3G V6.0 + Keil U3 + STC89C52
   3          *  名称：C语言学习实验
   4          *  公司：慧净电子科技有限公司
   5          *  淘宝：http://shop37031453.taobao.com       
   6          *  网站：www.hlmcu.com
   7          *  编写：
   8          *  日期：2008-8-08
   9          *   QQ : 121350852  398115088
  10          *  晶振:11.0592MHZ
  11          *  说明：免费开源，不提供源代码分析，有问题直接到慧净论坛交流
  12          *  论坛：http://hjdz.5d6d.com
  13          ******************************************************************
  14          程序功能：      比较循环移位与非循环移位。程序中，P1=m<<2;为非循环移位。
  15                                  P1=_crol_(m,2);为循环移位。注意观察P1口相连的各发光led的亮灭变化，
  16                                  进而比较两者间的差异。
  17                                  当按键S2没有被按下时，执行的为循环移位；当按下时，执行非循环移位。
  18          ****************************************************************************/
  19          #include <reg52.h>
  20          #include <intrins.h>
  21          
  22          sbit s2=P3^4;
  23          
  24          void main()
  25          {
  26   1              
  27   1              unsigned char m=0xf3;
  28   1              while(1)
  29   1              {
  30   2                      if(s2==0)
  31   2                              P1=m<<2;//将左移运算结果送P1口,此运算符为不循环移动，即移出的数据将丢失，而后面的将补零
  32   2                      else
  33   2                              P1=_crol_(m,2);//这个为循环移位，即移出的那些位将被送入到低位。
  34   2                                         //但是注意，调用这个_crol_(,)之前，要在头文件中包含intrins.h。
  35   2               }
  36   1      }
  37          /*另外，>>为非循环右移运算符。而_cror_（，）为循环右移函数。
  38            其包含于intrins.h头文件中，该文件还包含有其他移位函数，
  39            有兴趣的同学可以查阅相关资料。*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     29    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
