C51 COMPILER V9.60.7.0   MAIN                                                              12/11/2024 10:31:37 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX51.H>
   2          #include <intrins.h>
   3          #include "lcd1602.h"
   4          #include "key.h"
   5          #include "stdio.h"
   6          
   7          void clearData(char* Data)
   8          {
   9   1              unsigned int i = 0;
  10   1              for(i=0;i<32;i++)
  11   1              {
  12   2                      Data[i] = 0;
  13   2              }
  14   1      }
  15          
  16          void handleData(char *Data)
  17          {
  18   1              int i = 0,numData = 0,numOp = 0,fix = 0,firstCount = 0;
  19   1              long tempData[8]={0};
  20   1              long sum = 0;
  21   1              char op[8]={0};
  22   1              while(Data[i] != Sum)
  23   1              {
  24   2                      if((Data[i] >= '0') && (Data[i] <= '9'))
  25   2                      {
  26   3                              tempData[numData] = (tempData[numData] * 10) + (Data[i] - '0');
  27   3                      }
  28   2                      else
  29   2                      {
  30   3                              op[numOp] = Data[i];
  31   3                              numData++;
  32   3                              numOp++;
  33   3                      }
  34   2                      i++;
  35   2              }
  36   1              
  37   1              // 先算乘除法
  38   1              i = 0;
  39   1              while(op[i] != 0)
  40   1              {
  41   2                      //如果当前操作符是乘法（Mul）或除法（Div），
  42   2                      //并且下一个操作符是加法（Add）或减法（Sub），
  43   2                      //则立即计算当前乘法或除法。
  44   2                      if((op[i] == Mul) && ((op[i+1] == Add) || (op[i+1] == Sub)))
  45   2                      {
  46   3                              tempData[i] = tempData[i] * tempData[i+1];
  47   3                      }
  48   2                      else if((op[i] == Div) && ((op[i+1] == Add) || (op[i+1] == Sub)))
  49   2                      {
  50   3                              tempData[i] = tempData[i] / tempData[i+1];
  51   3                      }
  52   2                      else if((op[i] == Mul)||(op[i] == Div))
  53   2                      {
  54   3                              if(firstCount == 0){
C51 COMPILER V9.60.7.0   MAIN                                                              12/11/2024 10:31:37 PAGE 2   

  55   4                                      fix = i;        
  56   4                                      firstCount = 1;
  57   4                              }
  58   3                              if(op[i] == Div)
  59   3                              {
  60   4                                      tempData[fix] = tempData[fix] / tempData[i+1];
  61   4                              }
  62   3                              if(op[i] == Mul)
  63   3                              {
  64   4                                      tempData[fix] = tempData[fix] * tempData[i+1];
  65   4                              }
  66   3                      }
  67   2                      i++;
  68   2              }
  69   1              // 再算加减法
  70   1              // -7-7
  71   1              i = 0;
  72   1              sum = tempData[0];
  73   1              while(op[i] != 0)
  74   1              {
  75   2                      if(op[i] == Add)
  76   2                      {
  77   3                              if(i == 0){
  78   4                                      sum = tempData[i] + tempData[i+1];
  79   4                              }
  80   3                              else
  81   3                              {
  82   4                                      sum = sum + tempData[i+1];
  83   4                              }
  84   3                      }
  85   2                      
  86   2                      if(op[i] == Sub)
  87   2                      {
  88   3                              if(i == 0){
  89   4                                      sum = tempData[i] - tempData[i+1];
  90   4                              }
  91   3                              else
  92   3                              {
  93   4                                      sum = sum - tempData[i+1];
  94   4                              }
  95   3                      }
  96   2                      
  97   2                      i++;
  98   2              }
  99   1              Lcd_ShowChar(2,1,'=');
 100   1              Lcd_ShowSignedNum(2,2,sum,5);
 101   1              //Lcd_ShowNum(2,10,tempData[0],5);
 102   1      }
 103          
 104          void main()
 105          {
 106   1              char keyValue = 0;      
 107   1              char Data[32]={0};
 108   1              unsigned int num = 0;
 109   1              Lcd_Init();             
 110   1              //Lcd_ShowString(1,1,"6");
 111   1              while(1)
 112   1              {
 113   2                      keyValue = MatrixKey();                                         //扫描按键
 114   2                      //操作数
 115   2                      if((keyValue != Sum) && (keyValue != No_Press) && (keyValue != BackSpace) && (keyValue != Clear))
 116   2                      {
C51 COMPILER V9.60.7.0   MAIN                                                              12/11/2024 10:31:37 PAGE 3   

 117   3                              Data[num] = keyValue;
 118   3                              Lcd_ShowString(1,1,Data);
 119   3                              num++;
 120   3                      }
 121   2                      //清空
 122   2                      else if(keyValue == Clear)
 123   2                      {
 124   3                              Lcd_Clear(1);
 125   3                              Lcd_Clear(2);
 126   3                              clearData(Data);
 127   3                              num = 0;
 128   3                      }
 129   2      
 130   2                      
 131   2                      //退格
 132   2                      else if(keyValue == BackSpace)
 133   2                      {
 134   3                              Lcd_Clear(1);
 135   3                              if(num>=1){
 136   4                                      Data[num-1]=0;
 137   4                                      num = num - 1;
 138   4                              }
 139   3                              Lcd_ShowString(1,1,Data);
 140   3                      }
 141   2                      //求和
 142   2                      else if(keyValue == Sum)
 143   2                      {
 144   3                              Data[num] = Sum;
 145   3                              handleData(Data);
 146   3                      }
 147   2              }
 148   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1755    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----      95
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
